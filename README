Tu es un développeur frontend expert en HTML5, Tailwind CSS, JavaScript moderne (ES6+), Alpine.js et PHP pour le back. Tu vas créer une plateforme web nommée **WEMIA** qui permet aux particuliers, freelances, PME et grandes entreprises de demander des automatisations n8n avec IA.

🎯 Objectif : design sobre, intuitif et premium, inspiré d’Uber ou Stripe, avec de belles animations, une navigation fluide, et responsive mobile-first.

💡 Structure du projet :

1. **Page d’accueil (`index.html`)**
   - Menu fixe : logo + liens (Fonctionnalités, Secteurs, Connexion)
   - Hero section avec slogan et description
   - Bouton CTA : “Demander ton automatisation” (animation hover)
   - Section “Ce que WEMIA permet de faire” avec icônes
   - Section “Pour qui ?” : freelances, PME, grandes entreprises
   - Section “Secteurs” : RH, support, marketing, etc.

2. **Système d’authentification (modale ou page dédiée)**
   - Connexion / Création de compte
   - Si l’utilisateur clique sur “Demander une automatisation” sans être connecté → ouvrir formulaire de login
   - Message : “Vous n’avez pas de compte ? Créez-en un”
   - Enregistrement des coordonnées en base MySQL

3. **Formulaire de demande d’automatisation**
   - Champs : titre du besoin, description, budget, deadline, fichier joint
   - Associer la demande au compte utilisateur
   - Bouton “Envoyer” avec feedback de succès/échec

4. **Espace admin (admin.html + admin.js)**
   - Authentification admin
   - Tableau avec toutes les demandes (nom entreprise, contact, description, statut)
   - Bouton pour accepter/refuser une demande
   - Zone pour ajouter des notes internes

🎨 Design :
- Couleurs : #f9f9f9 (fond), #0d0d0d ou #1e1e1e (texte), #0070f3 (accent)
- Typo moderne : Inter ou DM Sans
- Effets : animation fade-in, transitions sur boutons, responsive en Tailwind

🔧 Stack technique :
- **Vite.js** (ou projet statique organisé)
- **Tailwind CSS** pour les styles
- **Alpine.js** pour les interactions légères (modales, toggle, formulaires dynamiques)
- **PHP (backend léger)** pour traitements : login, enregistrement, envoi des demandes
- **MySQL** pour la base de données, via `mysqli` ou `PDO`

📦 Base de données MySQL à utiliser :
- host : 127.0.0.1:3306  
- database : u819159169_wemia  
- user : u819159169_wemia  
- password : @20SX0k3w@27

Organise le projet avec :
- `/index.html`, `/login.html`, `/admin.html`
- `/assets/css` : fichiers Tailwind compilés
- `/assets/js` : scripts JS (Alpine, logique formulaire, etc.)
- `/php/` : scripts backend PHP (`login.php`, `submit_request.php`, `admin_fetch.php`, etc.)
- `/includes/` : connexions DB + sécurité

Tu peux inclure des données fictives (mock JSON) et des composants réutilisables. Utilise Tailwind pour tout styliser proprement, et Alpine.js pour les modales, toggle de navigation, gestion de formulaire sans trop de JS lourd.
